git config --global user.name "xuch2001"
git config --global user.email "xuch2001@163.com"
git init
git add readme.txt
git commit -m "wrote a readme file"
git status
git diff readme.txt （diff只是比较工作区和暂存区的文件）
git log
git log --pretty=oneline
git reset --hard HEAD^  （回退到上一次提交的版本，覆盖工作区文件）
git reset HEAD filename （reset把暂存区的文件取消暂存，或者是用版本库的文件覆盖暂存区文件，工作区的文件不会有任何变化）
git reflog 
git checkout -- readme.txt  （checkout是把版本库或暂存区的文件覆盖到工作区，并不会把版本库的文件覆盖到暂存区）
git rm （删除版本库里的文件，提交后生效，提交前还可以git reset HEAD filename恢复）
git remote add origin git@server-name.com:path/repo-name.git （关联一个远程库）
git push -u origin master （第一次推送master分支的所有内容）
git push origin master （之后每次推送）
git clone git@server-name:path/repo-name.git （从远程仓库克隆到本地）
git checkout -b dev （git checkout 命令加上 -b 参数表示创建并切换，相当于以下的两条命令：
git branch dev （创建dev分支）
git branch -d dev （删除dev分支）
git checkout dev (切换到dev分支）
git branch （查看分支，当前的分支前面会有个*号）
git merge dev （合并指定分支到当前分支，当前分支是master，把dev分支合并到master）
git log --graph （看分支合并图）